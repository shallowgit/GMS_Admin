<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gms.cuit.mapper.AdminMapper">

<!--登录-->
    <select id="loadUserByUsername" resultType="gms.cuit.entity.Gms_Admin">
        select * from gms_admin where admin_username= #{username};
    </select>

<!--更新密码-->
    <update id="updatePassword">
        UPDATE gms_admin SET admin_password = #{newpassword} where admin_username = #{username};
    </update>

<!--总览-收入-->
    <select id="getSummaryTodayOrderProfit" resultType="java.lang.Double">
        SELECT COALESCE(SUM(order_price),0) FROM gms_order WHERE order_mktime BETWEEN
				#{date_st} AND #{date_ed};
    </select>
<!--总览-订单数-->
    <select id="getSummaryTodayOrderCount" resultType="java.lang.Integer">
        SELECT COALESCE(COUNT(*),0) FROM gms_order WHERE order_mktime BETWEEN
				#{date_st} AND #{date_ed};
    </select>
<!--场馆种类-->
    <select id="queryVenueType" resultType="java.lang.Object">
        select type_name from gms_type;
    </select>
<!--获取指定时间内指定场馆类型的订单数-->
    <select id="getOrderCountByDateAndVen" resultType="java.lang.Integer">
        SELECT COALESCE(COUNT(*),0) FROM gms_order,gms_venue WHERE gms_venue.venue_id=gms_order.order_venue_id
				AND venue_type = #{catitemname}
				AND order_mktime BETWEEN #{date_st} AND #{date_ed};
    </select>
<!--获取最近订单-->
    <resultMap id="Gms_OrderResultMap" type="gms.cuit.entity.Gms_Order">
        <id column="order_id" property="order_Id"></id>
        <result column="order_date" property="order_Date"></result>
        <result column="order_st" property="order_St"></result>
        <result column="order_ed" property="order_Ed"></result>
        <result column="order_state" property="order_State"></result>
        <result column="order_mktime" property="order_Mktime"></result>
        <result column="order_price" property="order_Price"></result>
        <association property="order_Venue" javaType="gms.cuit.entity.Gms_Venue">
            <id column="venue_id" property="venue_Id"></id>
            <result column="venue_type" property="venue_Type"></result>
            <result column="venue_name" property="venue_Name"></result>
            <result column="venue_price" property="venue_Price"></result>
            <result column="venue_capacity" property="venue_Capacity"></result>
            <result column="venue_open" property="venue_Open"></result>
            <result column="venue_close" property="venue_Close"></result>
            <result column="venue_is_del" property="venue_IsDel"></result>
        </association>
        <association property="order_User" javaType="gms.cuit.entity.Gms_User">
            <id column="user_id" property="user_Id"></id>
<!--            <result column="user_password" property="user_Password"></result>-->
            <result column="user_sex" property="user_Sex"></result>
            <result column="user_age" property="user_Age"></result>
            <result column="user_email" property="user_Email"></result>
        </association>
    </resultMap>
    <select id="getLatestOrderList" resultMap="Gms_OrderResultMap">
        SELECT * FROM gms_order,gms_venue,gms_user WHERE gms_user.user_id=gms_order.order_user_id
        AND gms_order.order_venue_id=gms_venue.venue_id ORDER BY order_mktime DESC limit 0 , #{get_count};
    </select>

    <!--获取包含指定关键字的用户总数-->
    <select id="getUserTotalCountByKeyQuery" resultType="java.lang.Integer">
        select COALESCE(count(*),0) from gms_user where user_is_del = 0 and user_id like "%" #{query_key} "%";
    </select>

    <!--获取包含指定关键字的某页用户-->
    <select id="queryUserByKey" resultType="gms.cuit.entity.Gms_User">
        select * from gms_user where user_id like "%" #{query_key} "%"
        and user_is_del = 0
        order by user_id
        limit #{index} , #{currentCount} ;
    </select>

    <!--修改用户-->
    <update id="updateUser" parameterType="gms.cuit.entity.Gms_User">
        update gms_user set user_password=#{user_Password},user_sex=#{user_Sex},
            user_age=#{user_Age},user_email=#{user_Email} where user_id=#{user_Id};
    </update>

    <!--添加用户-->
    <insert id="addUser" parameterType="gms.cuit.entity.Gms_User">
        insert into gms_user values(#{user_Id},#{user_Password},#{user_Sex},#{user_Age},#{user_Email});
    </insert>

<!--    &lt;!&ndash;删除用户&ndash;&gt;
    <update id="delUser" parameterType="gms.cuit.entity.Gms_User">
        update gms_user set user_is_del = 1 where user_id = #{user_Id};
    </update>-->

<!--获取包含指定关键字的场馆总数-->
    <select id="getVenueTotalCountByKeyQuery" resultType="java.lang.Integer">
        select COALESCE(count(*),0) from gms_venue where venue_is_del = 0 and venue_name like "%" #{query_key} "%";
    </select>

<!--获取包含指定关键字的某页场馆-->
    <select id="queryVenueByKey" resultType="gms.cuit.entity.Gms_Venue">
        select * from gms_venue where venue_is_del = 0 and venue_name like "%" #{query_key} "%"
        order by venue_type desc limit #{index} , #{currentCount} ;
    </select>

<!--添加场馆-->
    <insert id="addVenue" parameterType="gms.cuit.entity.Gms_Venue">
        insert into gms_venue values(#{venue_Id},#{venue_Type},#{venue_Name},#{venue_Price},#{venue_Capacity},#{venue_Open},#{venue_Close},0);
    </insert>

<!--修改场馆-->
    <update id="updateVenue" parameterType="gms.cuit.entity.Gms_Venue">
        update gms_venue set venue_type=#{venue_Type},venue_name=#{venue_Name},venue_price=#{venue_Price},
            venue_capacity=#{venue_Capacity},venue_open=#{venue_Open},venue_close=#{venue_Close} where venue_id=#{venue_Id};
    </update>

<!--删除场馆-->
    <update id="delVenue" parameterType="gms.cuit.entity.Gms_Venue">
        update gms_venue set venue_is_del = 1 where venue_id = #{venue_Id};
    </update>

    <!--获取包含指定关键字的器材总数-->
    <select id="getEquipmentTotalCountByKeyQuery" resultType="java.lang.Integer">
        select COALESCE(count(*),0) from gms_equipment where equipment_is_del = 0 and equipment_name like "%" #{query_key} "%";
    </select>

    <!--获取包含指定关键字的某页器材-->
    <select id="queryEquipmentByKey" resultType="gms.cuit.entity.Gms_Equipment">
        select * from gms_equipment where equipment_is_del = 0 and equipment_name like "%" #{query_key} "%"
        limit #{index} , #{currentCount} ;
    </select>

    <!--添加器材-->
    <insert id="addEquipment" parameterType="gms.cuit.entity.Gms_Equipment">
        insert into gms_equipment values(#{equipment_Id},#{equipment_Name},#{equipment_Count},0,0);
    </insert>

    <!--修改器材-->
    <update id="updateEquipment" parameterType="gms.cuit.entity.Gms_Equipment">
        update gms_equipment set equipment_name=#{equipment_Name},equipment_count=#{equipment_Count},equipment_lend=#{equipment_Lend}
        where equipment_id=#{equipment_Id};
    </update>

    <!--删除场馆-->
    <update id="delEquipment" parameterType="gms.cuit.entity.Gms_Equipment">
        update gms_equipment set equipment_is_del = 1 where equipment_id = #{equipment_Id};
    </update>

<!--获取包含指定关键字的订单总数-->
    <select id="getOrderTotalCountByKeyQuery" resultType="java.lang.Integer">
        SELECT COALESCE(COUNT(*),0) FROM gms_order,gms_venue,gms_user
        WHERE gms_order.order_venue_id=gms_venue.venue_id
        AND order_user_id = gms_user.user_id
        AND (user_id LIKE "%" #{query_key} "%"
        OR venue_name LIKE "%" #{query_key} "%" OR venue_type LIKE "%" #{query_key} "%") ;
    </select>

<!--获取包含指定关键字的某页订单-->
    <select id="queryOrderByKey" resultMap="Gms_OrderResultMap">
        SELECT * FROM gms_order,gms_venue,gms_user
        WHERE gms_order.order_venue_id=gms_venue.venue_id
        AND gms_user.user_id=gms_order.order_user_id
        AND (user_id LIKE "%" #{query_key} "%" OR venue_name LIKE "%" #{query_key} "%"
        OR venue_type LIKE "%" #{query_key} "%")
        <choose>
            <when test='sortStatus == "1"'>ORDER BY order_date DESC</when>
            <when test='sortStatus == "2"'> ORDER BY order_date </when>
            <when test='sortStatus == "3"'> ORDER BY order_price DESC </when>
            <when test='sortStatus == "4"'> ORDER BY order_price </when>
            <when test='sortStatus == "5"'> ORDER BY order_mktime DESC </when>
            <when test='sortStatus == "6"'> ORDER BY order_mktime </when>
            <when test='sortStatus == "7"'> ORDER BY venue_type </when>
        </choose>

        limit #{index},#{currentCount};
    </select>

    <!--获取包含指定关键字的器材借用订单总数-->
    <select id="getLeaseTotalCountByKeyQuery" resultType="java.lang.Integer">
        SELECT COALESCE(COUNT(*),0) FROM gms_lease,gms_equipment WHERE gms_lease.lease_equipment_id=gms_equipment.equipment_id AND (lease_user_id LIKE "%" #{query_key} "%"
        OR equipment_name LIKE "%" #{query_key} "%") ;
    </select>

    <!--获取包含指定关键字的某页器材借用订单-->
    <resultMap id="Gms_LeaseResultMap" type="gms.cuit.entity.Gms_Equipment_Lease">
        <id column="lease_id" property="lease_Id"></id>
        <result column="lease_count" property="lease_Count"></result>
        <result column="lease_state" property="lease_State"></result>
        <result column="lease_borrowTime" property="lease_BorrowTime"></result>
        <result column="lease_returnTime" property="lease_ReturnTime"></result>
        <association property="gms_User" javaType="gms.cuit.entity.Gms_User">
            <id column="user_id" property="user_Id"></id>
            <result column="user_password" property="user_Password"></result>
            <result column="user_sex" property="user_Sex"></result>
            <result column="user_age" property="user_Age"></result>
            <result column="user_email" property="user_Email"></result>
        </association>
        <association property="gms_Equipment" javaType="gms.cuit.entity.Gms_Equipment">
            <id column="equipment_id" property="equipment_Id"></id>
            <result column="equipment_name" property="equipment_Name"></result>
            <result column="equipment_count" property="equipment_Count"></result>
            <result column="equipment_lend" property="equipment_Lend"></result>
            <result column="equipment_is_del" property="equipment_IsDel"></result>
        </association>
    </resultMap>
    <select id="queryLeaseByKey" resultMap="Gms_LeaseResultMap">
        SELECT * FROM gms_lease,gms_equipment,gms_user WHERE gms_lease.lease_equipment_id=gms_equipment.equipment_id AND gms_user.user_id=gms_lease.lease_user_id
        AND (lease_user_id LIKE "%" #{query_key} "%" OR equipment_name LIKE "%" #{query_key} "%")
        <choose>
            <when test='sortStatus == "1"'>ORDER BY lease_borrowTime DESC</when>
            <when test='sortStatus == "2"'> ORDER BY lease_borrowTime </when>
            <when test='sortStatus == "3"'> ORDER BY lease_returnTime DESC </when>
            <when test='sortStatus == "4"'> ORDER BY lease_returnTime </when>
        </choose>

        limit #{index},#{currentCount};
    </select>

<!--获取包含指定关键字的通知总数-->
    <select id="getNoticeTotalCountByKeyQuery" resultType="java.lang.Integer">
        select COALESCE(count(*),0) from gms_notice where notice_state = 0 and notice_title like "%" #{query_key} "%";
    </select>

<!--获取包含指定关键字的某页通知-->
    <select id="queryNoticeByKey" resultType="gms.cuit.entity.Gms_Notice">
        select * from gms_notice where notice_state = 0 and notice_title like "%" #{query_key} "%"
        order by notice_time desc limit #{index} , #{currentCount} ;
    </select>

<!--添加通知-->
    <insert id="addNotice" parameterType="gms.cuit.entity.Gms_Notice">
        insert into gms_notice values(#{notice_Id},#{notice_Time},#{notice_Man},#{notice_Content},#{notice_Title},0);
    </insert>

<!--修改通知-->
    <update id="updateNotice" parameterType="gms.cuit.entity.Gms_Notice">
        update gms_notice set notice_time=#{notice_Time},notice_man=#{notice_Man},notice_content=#{notice_Content},
            notice_title=#{notice_Title},notice_state=0 where notice_id=#{notice_Id};
    </update>

<!--删除通知-->
    <update id="delNotice" parameterType="gms.cuit.entity.Gms_Notice">
        update gms_notice set notice_state = 1 where notice_id = #{notice_Id};
    </update>

<!--查询指定时间段,指定场馆/类别的订单收入-->
    <select id="getOrderProfitByDateAndVenOrCat" resultType="java.lang.Double">
        SELECT COALESCE(SUM(order_price),0) FROM gms_order,gms_venue WHERE gms_venue.venue_id=gms_order.order_venue_id
		AND order_mktime BETWEEN #{date_st} AND #{date_ed}
        <if test="ven_name != null"> AND venue_name = #{ven_name} </if>
        <if test="cat_name != null"> AND venue_type = #{cat_name} </if>
		;
    </select>

<!--查询指定条件的订单人数-->
    <select id="getOrderCountByDateAndVenOrCatAndSexAndAge" resultType="java.lang.Integer">
        SELECT COALESCE(COUNT(*),0) FROM gms_order,gms_venue,gms_user WHERE gms_venue.venue_id=gms_order.order_venue_id
        AND gms_order.order_user_id=gms_user.user_id AND order_mktime BETWEEN #{date_st} AND #{date_ed}
		<if test="ven_name != null"> AND venue_name = #{ven_name} </if>
        <if test="cat_name != null"> AND venue_type = #{cat_name} </if>
        <if test="sex != null"> AND user_sex = #{sex} </if>
        <if test='age == "10"'> AND user_age &lt; '20' </if>
        <if test='age == "20"'> AND user_age >= '20' AND user_age &lt; '29' </if>
        <if test='age == "30"'> AND user_age >= '30' AND user_age &lt; '39' </if>
        <if test='age == "40"'> AND user_age >= '40' AND user_age &lt; '49' </if>
        <if test='age == "50"'> AND user_age >= '50' AND user_age &lt; '59' </if>
        <if test='age == "60"'> AND user_age >= '60' </if>
        ;
    </select>

<!--    定时任务 - 更新当前时间以前的订单状态-->
<!--    三点只更新3点以前的订单,不更新3~4点的订单状态-->
    <update id="updateOrderStateByTime" >
        update gms_order set order_state=2 where order_state=0 and (order_date &lt; #{date} or (order_date = #{date}
        and order_st &lt; #{hour} ));
    </update>

<!--    定时任务 - 获取当前日期的场馆订单状态-->
    <select id="queryOrderStateByTime" resultType="gms.cuit.entity.Gms_Vdstate">
        select * from gms_vdstate where vdstate_date = #{date};
    </select>

<!--    定时任务 - 更新当前日期的场馆订单状态-->
    <update id="updateVdState" parameterType="gms.cuit.entity.Gms_Vdstate">
        update gms_vdstate set vdstate_st= #{vdstate_St} where vdstate_id= #{vdstate_Id} and vdstate_date= #{vdstate_Date};
    </update>

    <insert id="addVdState" parameterType="gms.cuit.entity.Gms_Vdstate">
        insert into gms_vdstate values(#{vdstate_Id},#{vdstate_Date},#{vdstate_St});
    </insert>

    <delete id="delVdState" parameterType="gms.cuit.entity.Gms_Vdstate">
        delete from gms_vdstate where vdstate_id = #{vdstate_Id};
    </delete>
</mapper>